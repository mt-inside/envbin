name: release

on: push
  # push:
  #   tags:
  #     - 'v*.*.*'

jobs:
  binary:
    name: Build and upload binaries
    runs-on: 'ubuntu-latest'
    steps:
      - name: Libusb
        run: sudo apt install libusb-1.0-0-dev

      - name: C cross-compilers
        run: sudo apt install gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf

      - name: Checkout
        uses: actions/checkout@v3

      - name: Update Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21'

      - name: Install Just
        uses: extractions/setup-just@v1

      - name: build-linux-amd64
        run: GOOS="linux" GOARCH="amd64" CGO_ENABLED=1 just build-daemon-ci -o envbin-Linux-x86_64 -v

      - name: build-linux-arm64
        run: GOOS="linux" GOARCH="arm64" CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc CC_FOR_TARGET=aarch64-linux-gnu-gcc just build-daemon-ci -o envbin-Linux-arm64 -v

      - name: build-linux-arm
        run: GOOS="linux" GOARCH="arm" CGO_ENABLED=1 CC=arm-linux-gnueabihf-gcc CC_FOR_TARGET=arm-linux-gnueabihf-gcc just build-daemon-ci -o envbin-Linux-arm -v

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ github.workspace }}/envbin-Linux-x86_64
            ${{ github.workspace }}/envbin-Linux-arm64
            ${{ github.workspace }}/envbin-Linux-arm
            ${{ github.workspace }}/envbin-Darwin-x86_64
            ${{ github.workspace }}/envbin-Darwin-arm64
          fail_on_unmatched_files: true
          generate_release_notes: true
          # tag_name: test

  # TODO: dockerhub too - needs secret

  container:
    name: Build and publish container image
    runs-on: 'ubuntu-latest'
    steps:
      - name: Libusb
        run: sudo apt install libusb-1.0-0-dev

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build APK
        id: melange
        uses: chainguard-dev/actions/melange-build@main
        with:
          config: melange.yaml
          archs: x86_64,aarch64
          sign-with-temporary-key: true

      - name: Build & Publish OCI
        id: apko
        # GH: chainguard-images/action/apko-publish
        uses: distroless/actions/apko-publish@main
        with:
          config: apko.yaml
          archs: x86_64,aarch64
          # Will be a SHA, unless this commit is tagged. Which is ideal tbh
          tag: ghcr.io/mt-inside/envbin:${{ github.ref_name }} ghcr.io/mt-inside/envbin:latest
          # Default value for melange-build.signing-key-path
          keyring-append: ${{ github.workspace }}/melange.rsa.pub

      # Need to install cosign. Also what keymat does it sign with?
      # - name: Sign OCI
      #   shell: bash
      #   run: COSIGN_EXPERIMENTAL=true cosign sign ${{ steps.apko.outputs.digest }}
