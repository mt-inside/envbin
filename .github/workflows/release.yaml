name: Release to Dockerhub

# fixme: running on non-tag pushes, getting confused
on:
  push:
    #tags: # all tags. Including lightweight (it's convention to make GH Releases on annotated tags, but it supports both)
    #  - '*'

# Note the commits operated on are based from GITHUB_REF, but I think we could just use `git describe` becuase I'm sure the repo is checked out to that point. eg
#   git for-each-ref --count=1 --sort='-*authordate' --format='%(*refname:short)' 'refs/tags'
#   git describe --abbrev=0 --tags $(git describe --tags --abbrev=0)^

jobs:
  make_release:
    name: Make Release
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get current tag
        id: get_current_tag
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Make GH release
        id: make_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref }} # Guarenteed to be a tag cause by definion we're on one
          release_name: Release ${{ github.ref }}
          prerelease: false
          draft: true

      - name: Set up Docker Buildx # "Can't auto-push without this" - need the buildx "driver" not the docker one
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: mtinside
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # The .git dir doesn't make it to the actual build phase, so version info is blank
      # Looks like a buildx thing? The Dockerfile is sound cause this works in local docker builds
      - name: Make and push Docker image
        uses: docker/build-push-action@v2 # implicity relies on /Dockerfile
        with:
          push: true
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          #tags: mtinside/envbin:${{ steps.get_current_tag.outputs.tag }}
          tags: mtinside/envbin:latest
